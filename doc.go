/*
Package Hephaestus

解析微服务部署标签 标签均使用yaml文件配置
微服务如何部署均通过yaml文件中的配置定义，对于旧版服务不存在此文件
部署存在以下几种情况：
  - 安装 （不存在微服务时默认创建）
  - 卸载 （软卸载，不删除服务文件，仅删除meta文件，删除的meta文件会在回收站中）
  - 安装更新
    旧版 不存在yaml时，根据yaml配置更新所需的文件，并备份原有的文件
    新版 存在yaml文件，根据配置更新所需的文件，备份原有的文件
  - 回滚更新到上一个版本（仅维护一个旧版本）
    如何回滚，使用软连接的方式进行切换

旧服务不是软链接怎么处理？
1、停止服务
2、根据新安装包中的配置文件将旧服务目录中需要更新的文件移动到数据目录下按服务-Old
3、在微服务目录下创建对应的软连接到对应的目录下的文件或文件夹

版本号信息：
为方便对比，版本号仅和构建日期有关为携带s的数字字符串

版本对比：
版本信息由数据库维护，不通过数据目录下的文件夹名称判断
数据目录最多仅存在两个目录：$APP/current $APP/last
当版本发生变化时，修改目录名称来进行切换 无论何时微服务$APP下的软链接都指向current

## 方案2
简单粗暴使用文件替换的方式，最小程度减小对原有APP目录的影响
在旧服务数据目录下会存储类似git的历史信息用于回滚操作 路径基于微服务根目录

数据目录下仅存储last版本的文件，一旦进行回滚操作后，会删除数据目录直到重新上传新的部署包

必填项:
服务名
版本号 如果不存在版本号无法做版本比较是回退还是更新
pkg 包部署规则
*/
package Hephaestus
